<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Page</title>
  <!-- <link rel="stylesheet" href="styles.css"> -->

  <!-- <script src="otpTimer.js"></script> -->
  <style>
    body {
  font-family: Arial, sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-image: linear-gradient(135deg, #f6c07f, #94b0da);
  margin: 0;
}

.otp-container {
  text-align: center;
  background-color: #ffffff;
  border-radius: 10px;
  padding: 30px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
}

h1 {
  color: #007bff;
  font-size: 28px;
  font-weight: bold;
  margin-bottom: 20px;
}

.otp-input-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

input[type="text"] {
  width: 50px;
  height: 50px;
  text-align: center;
  font-size: 24px;
  font-weight: bold;
  border: none;
  border-radius: 50px;
  background: linear-gradient(135deg, #ff4081, #007bff);
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);
  margin: 0 5px;
  transition: box-shadow 0.3s;
  color: #ffffff;
}

input[type="text"]:focus {
  outline: none;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

#timer {
  font-size: 14px;
  color: #888888;
  margin-top: 10px;
}

button {
  padding: 12px 30px;
  margin: 10px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: background-color 0.3s;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);
}

button:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

button#submit-btn {
  background: linear-gradient(135deg, #ff4081, #ff146a);
  color: #ffffff;
}

button#submit-btn:hover {
  background: linear-gradient(135deg, #ff4081, #ff0058);
}

button#resend-btn {
  background: linear-gradient(135deg, #007bff, #0056b3);
  color: #ffffff;
}

button#resend-btn:hover {
  background: linear-gradient(135deg, #007bff, #003b80);
}

  </style>
</head>
<!DOCTYPE html>
<html>
<head>
  <title>OTP Verification</title>
</head>
<!DOCTYPE html>
<html>
<head>
  <title>OTP Verification</title>
</head>
<body>
  <form action="/otpEnter" method="post">
    <div class="otp-container">
      <h1>Enter OTP</h1>
      <div class="otp-input-container">
        <input type="text" name="first" maxlength="1" id="digit1" autofocus oninput="handleOtpInput(this, 'second')">
        <input type="text" name="second" maxlength="1" id="digit2" oninput="handleOtpInput(this, 'third')">
        <input type="text" name="third" maxlength="1" id="digit3" oninput="handleOtpInput(this, 'fourth')">
        <input type="text" name="fourth" maxlength="1" id="digit4">
      </div>
      <!-- <p id="timer">Time Left: <span id="countdown">60</span>s</p> -->
      <div id="otp-timer"></div>
      
      <div >
        <a href="/otp" class="btn btn-primary">Resend OTP</a>
      </div>
     
      
      
      <button id="submit-btn" type="submit">Submit</button>
    </div>
  </form>
    <!-- otp timer and resend -->

  <script>
    function startOTPTimer(duration, displayElement) {
  let timer = duration, minutes, seconds;

  const intervalId = setInterval(function () {
    minutes = parseInt(timer / 60, 10);
    seconds = parseInt(timer % 60, 10);

    minutes = minutes < 10 ? "0" + minutes : minutes;
    seconds = seconds < 10 ? "0" + seconds : seconds;

    displayElement.textContent = minutes + ":" + seconds;

    if (--timer < 0) {
      clearInterval(intervalId);
      // Handle timeout here (e.g., show resend button)
    }
  }, 1000);
}

// Example usage with 5 minutes (300 seconds) duration
const otpDuration = 30; // 5 minutes
const otpTimerDisplay = document.getElementById("otp-timer");
startOTPTimer(otpDuration, otpTimerDisplay);


//cursor movement
function handleOtpInput(input, nextInputId) {
      console.log(11);
  const maxLength = input.getAttribute('maxlength');
  const inputValue = input.value;

  if (inputValue.length >= maxLength) {
    const nextInput = document.getElementsByName(nextInputId)[0];
    nextInput.focus();
  }
}

  </script>
  <!-- <script src="script.js"></script> -->
</body>
</html>

